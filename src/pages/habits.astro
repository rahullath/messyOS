---
// src/pages/habits.astro (Production version)
import DashboardLayout from '../layouts/DashboardLayout.astro';
---

<DashboardLayout title="Habits - MeshOS">
  <div class="space-y-8">
    <!-- Header -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-semibold text-text-primary mb-2">Your Habit Tracker</h1>
        <p class="text-text-secondary" id="status-text">
          Loading your habits...
        </p>
      </div>
      <div class="flex space-x-3">
        <a 
          href="/import"
          class="flex items-center px-4 py-2 bg-accent-success text-white rounded-lg hover:bg-accent-success/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
          </svg>
          Import Historical Data
        </a>
        <button 
          id="add-habit-btn"
          class="flex items-center px-4 py-2 bg-accent-primary text-white rounded-lg hover:bg-accent-primary/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          New Habit
        </button>
      </div>
    </div>

    <!-- Stats -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6" id="stats-grid">
      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Today's Progress</p>
            <p class="text-2xl font-semibold text-text-primary mt-1" id="today-progress">0/0</p>
            <p class="text-sm text-accent-success mt-1" id="completion-rate">0% complete</p>
          </div>
          <div class="w-12 h-12 bg-accent-success/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-success" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Building Habits</p>
            <p class="text-2xl font-semibold text-text-primary mt-1" id="build-habits">0</p>
            <p class="text-sm text-accent-success mt-1">positive routines</p>
          </div>
          <div class="w-12 h-12 bg-accent-success/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🏗️</span>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Breaking Habits</p>
            <p class="text-2xl font-semibold text-text-primary mt-1" id="break-habits">0</p>
            <p class="text-sm text-accent-error mt-1">avoiding negatives</p>
          </div>
          <div class="w-12 h-12 bg-accent-error/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🚫</span>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Longest Streak</p>
            <p class="text-2xl font-semibold text-text-primary mt-1" id="longest-streak">0</p>
            <p class="text-sm text-text-muted mt-1">days</p>
          </div>
          <div class="w-12 h-12 bg-accent-warning/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🔥</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Habits Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="habits-grid">
      <!-- Loading state -->
      <div class="col-span-full card text-center py-12">
        <div class="w-16 h-16 bg-accent-primary/10 rounded-full flex items-center justify-center mx-auto mb-4">
          <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-accent-primary"></div>
        </div>
        <h3 class="text-lg font-semibold text-text-primary mb-2">Loading your habits...</h3>
        <p class="text-text-muted">Connecting to your database</p>
      </div>
    </div>

    <!-- Success Actions -->
    <div class="card p-6 bg-accent-success/10 border border-accent-success/20" id="success-panel" style="display: none;">
      <h3 class="text-lg font-semibold text-accent-success mb-4">🎉 MeshOS v3 is Ready!</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
        <div>
          <p class="font-medium text-text-primary">✅ Database Connected</p>
          <p class="font-medium text-text-primary">✅ Habits Loaded</p>
          <p class="font-medium text-text-primary">✅ Categories Working</p>
          <p class="font-medium text-text-primary">✅ Logging Ready</p>
        </div>
        <div>
          <p class="font-medium text-text-primary">✅ Real Data from Loop Habits</p>
          <p class="font-medium text-text-primary">✅ Build/Break Types</p>
          <p class="font-medium text-text-primary">✅ Original Colors Preserved</p>
          <p class="font-medium text-text-primary">✅ Ready for Historical Import</p>
        </div>
      </div>
      
      <div class="mt-4 p-4 bg-accent-primary/10 border border-accent-primary/20 rounded-lg">
        <h4 class="font-medium text-accent-primary mb-2">🚀 Next Phase: Historical Data Import</h4>
        <p class="text-text-secondary text-sm mb-3">
          Import your Loop Habits CSV files to see:
        </p>
        <ul class="text-text-secondary text-sm space-y-1 ml-4">
          <li>• Historical progress trends and patterns</li>
          <li>• Actual streak calculations from your data</li>
          <li>• Progress visualization over months</li>
          <li>• AI analysis of your habit patterns</li>
        </ul>
        <a 
          href="/import"
          class="inline-flex items-center mt-3 px-4 py-2 bg-accent-primary text-white rounded-lg hover:bg-accent-primary/90 transition-colors"
        >
          📁 Import Your Historical Data →
        </a>
      </div>
    </div>
  </div>
</DashboardLayout>

<script>
  import { supabase } from '../lib/supabase/client.ts';

  let habits = [];
  let todayEntries = [];

  // Load habits and today's entries
  async function loadHabitsAndEntries() {
    try {
      // Load habits
      const { data: habitsData, error: habitsError } = await supabase
        .from('habits')
        .select('*')
        .eq('user_id', '368deac7-8526-45eb-927a-6a373c95d8c6')
        .eq('is_active', true)
        .order('position', { ascending: true });

      if (habitsError) throw habitsError;
      habits = habitsData || [];

      // Load today's entries
      const today = new Date().toISOString().split('T')[0];
      const { data: entriesData, error: entriesError } = await supabase
        .from('habit_entries')
        .select('*')
        .eq('user_id', '368deac7-8526-45eb-927a-6a373c95d8c6')
        .eq('date', today);

      if (entriesError) throw entriesError;
      todayEntries = entriesData || [];

      renderHabitsAndStats();
      
    } catch (error) {
      console.error('Error loading data:', error);
      document.getElementById('habits-grid').innerHTML = `
        <div class="col-span-full card text-center py-12">
          <div class="w-16 h-16 bg-accent-error/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span class="text-2xl">❌</span>
          </div>
          <h3 class="text-lg font-semibold text-text-primary mb-2">Failed to load habits</h3>
          <p class="text-text-muted">${error.message}</p>
        </div>
      `;
    }
  }

  function renderHabitsAndStats() {
    if (habits.length === 0) return;

    // Calculate stats
    const completedToday = todayEntries.length;
    const totalHabits = habits.length;
    const buildHabits = habits.filter(h => h.type === 'build').length;
    const breakHabits = habits.filter(h => h.type === 'break').length;
    const longestStreak = Math.max(...habits.map(h => h.streak_count || 0), 0);
    const completionRate = totalHabits > 0 ? Math.round((completedToday / totalHabits) * 100) : 0;

    // Update stats
    document.getElementById('status-text').textContent = `${totalHabits} habits tracked • ${buildHabits} building • ${breakHabits} breaking`;
    document.getElementById('today-progress').textContent = `${completedToday}/${totalHabits}`;
    document.getElementById('completion-rate').textContent = `${completionRate}% complete`;
    document.getElementById('build-habits').textContent = buildHabits;
    document.getElementById('break-habits').textContent = breakHabits;
    document.getElementById('longest-streak').textContent = longestStreak;

    // Render habits
    const grid = document.getElementById('habits-grid');
    grid.innerHTML = habits.map(habit => {
      const isCompleted = todayEntries.some(entry => entry.habit_id === habit.id);
      
      return `
        <div class="card hover:bg-surface-hover transition-colors">
          <div class="flex items-start justify-between mb-4">
            <div class="flex-1">
              <div class="flex items-center space-x-2 mb-2">
                <div class="w-3 h-3 rounded-full" style="background-color: ${habit.color}"></div>
                <h3 class="font-semibold text-text-primary">${habit.name}</h3>
              </div>
              <p class="text-sm text-text-muted">${habit.category}</p>
              <p class="text-xs text-text-muted mt-1">${habit.description}</p>
            </div>
            <div class="flex flex-col items-end space-y-1">
              <span class="px-2 py-1 text-xs rounded-full ${
                habit.type === 'build' 
                  ? 'bg-accent-success/20 text-accent-success' 
                  : 'bg-accent-error/20 text-accent-error'
              }">
                ${habit.type}
              </span>
            </div>
          </div>
          
          <div class="flex items-center space-x-2 mb-4">
            <span class="text-2xl">🔥</span>
            <span class="text-lg font-semibold text-text-primary">${habit.streak_count || 0}</span>
            <span class="text-sm text-text-muted">day streak</span>
          </div>
          
          <div class="mb-4">
            <p class="text-xs text-text-muted mb-2">Progress tracking</p>
            <div class="flex space-x-1">
              ${[...Array(7)].map((_, i) => `
                <div class="w-6 h-6 rounded-full flex items-center justify-center text-xs ${
                  i === 6 && isCompleted 
                    ? 'bg-accent-success text-white' 
                    : 'bg-surface border border-border text-text-muted'
                }">
                  ${i === 6 && isCompleted ? '✓' : '·'}
                </div>
              `).join('')}
            </div>
          </div>
          
          <button
            class="w-full py-3 px-4 rounded-lg font-medium transition-colors ${
              isCompleted
                ? 'bg-accent-success/20 text-accent-success border border-accent-success/30 cursor-default'
                : 'bg-accent-primary/20 text-accent-primary border border-accent-primary/30 hover:bg-accent-primary/30'
            }"
            onclick="${isCompleted ? '' : `logHabit('${habit.id}', '${habit.name}')`}"
            ${isCompleted ? 'disabled' : ''}
          >
            ${isCompleted ? `
              <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
              </svg>
              Completed Today ✅
            ` : `
              <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
              </svg>
              ${habit.type === 'build' ? 'Mark Complete' : 'Mark Avoided'}
            `}
          </button>
        </div>
      `;
    }).join('');

    // Show success panel
    document.getElementById('success-panel').style.display = 'block';
  }

  // Global function for habit logging
  window.logHabit = async function(habitId, habitName) {
    try {
      const response = await fetch(`/api/habits/${habitId}/log`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ value: 1, notes: '' })
      });

      const result = await response.json();
      
      if (response.ok) {
        // Success! Reload to show updated state
        window.location.reload();
      } else {
        alert(`❌ Error: ${result.error || 'Failed to log habit'}`);
      }
    } catch (error) {
      alert('❌ Failed to log habit. Please try again.');
      console.error('Network error:', error);
    }
  };

  // Event listeners
  document.getElementById('add-habit-btn')?.addEventListener('click', () => {
    alert('✨ Habit creation feature coming in Phase 3! For now, your Loop Habits are ready to track.');
  });

  // Start loading
  document.addEventListener('DOMContentLoaded', loadHabitsAndEntries);
</script>