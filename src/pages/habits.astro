---
// src/pages/habits.astro (Enhanced with real data)
import DashboardLayout from '../layouts/DashboardLayout.astro';
import { createServerClient } from '../lib/supabase/server';

const supabase = createServerClient();

// Replace with your actual user ID from Supabase Auth
const userId = '368deac7-8526-45eb-927a-6a373c95d8c6'; // ⚠️ CHANGE THIS TO YOUR REAL UUID

// Fetch your actual habits from the database
const { data: habits, error } = await supabase
  .from('habits')
  .select(`
    *,
    habit_entries(
      value,
      logged_at,
      date
    )
  `)
  .eq('user_id', userId)
  .eq('is_active', true)
  .order('position', { ascending: true });

if (error) {
  console.error('Error fetching habits:', error);
}

// Process habits data for display
const today = new Date().toISOString().split('T')[0];
interface HabitEntry {
  value: number;
  logged_at: string;
  date: string;
}

interface DayProgress {
  date: string;
  completed: boolean;
  value: number;
}

interface Habit {
  id: string;
  name: string;
  description: string;
  category: string;
  type: 'build' | 'break';
  color: string;
  streak_count: number;
  habit_entries?: HabitEntry[];
  is_active: boolean;
  position: number;
  // Properties added in processedHabits
  completedToday: boolean;
  todayValue: number;
  last7Days: DayProgress[];
}

// Process habits data for display
const processedHabits = (habits || []).map((habit: Habit) => {
  const todayEntry = habit.habit_entries?.find((entry: HabitEntry) => entry.date === today);
  
  // Get last 7 days for weekly view
  const last7Days: DayProgress[] = [];
  for (let i = 6; i >= 0; i--) {
    const date = new Date();
    date.setDate(date.getDate() - i);
    const dateStr = date.toISOString().split('T')[0];
    
    const dayEntry = habit.habit_entries?.find((entry: HabitEntry) => entry.date === dateStr);
    
    last7Days.push({
      date: dateStr,
      completed: !!dayEntry && dayEntry.value > 0,
      value: dayEntry?.value || 0
    });
  }
  
  return {
    ...habit,
    completedToday: !!todayEntry && todayEntry.value > 0,
    todayValue: todayEntry?.value || 0,
    last7Days
  };
});

// Calculate stats
const stats = {
  completedToday: processedHabits.filter(h => h.completedToday).length,
  totalHabits: processedHabits.length,
  longestStreak: Math.max(...processedHabits.map(h => h.streak_count || 0), 0),
  buildHabits: processedHabits.filter(h => h.type === 'build').length,
  breakHabits: processedHabits.filter(h => h.type === 'break').length
};

const completionRate = stats.totalHabits > 0 ? Math.round((stats.completedToday / stats.totalHabits) * 100) : 0;
---

<DashboardLayout title="Habits - MeshOS">
  <div class="space-y-8">
    <!-- Header -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-semibold text-text-primary mb-2">Your Real Habits</h1>
        <p class="text-text-secondary">
          {stats.totalHabits} habits tracked • {stats.buildHabits} building • {stats.breakHabits} breaking
        </p>
      </div>
      <div class="flex space-x-3">
        <a 
          href="/import"
          class="flex items-center px-4 py-2 bg-accent-success text-white rounded-lg hover:bg-accent-success/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
          </svg>
          Import CSV Data
        </a>
        <button 
          id="add-habit-btn"
          class="flex items-center px-4 py-2 bg-accent-primary text-white rounded-lg hover:bg-accent-primary/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          New Habit
        </button>
      </div>
    </div>

    <!-- Real Stats from Your Data -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6">
      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Today's Progress</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">
              {stats.completedToday}/{stats.totalHabits}
            </p>
            <p class="text-sm text-accent-success mt-1">{completionRate}% complete</p>
          </div>
          <div class="w-12 h-12 bg-accent-success/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-success" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Building Habits</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">{stats.buildHabits}</p>
            <p class="text-sm text-accent-success mt-1">positive routines</p>
          </div>
          <div class="w-12 h-12 bg-accent-success/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🏗️</span>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Breaking Habits</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">{stats.breakHabits}</p>
            <p class="text-sm text-accent-error mt-1">avoiding negatives</p>
          </div>
          <div class="w-12 h-12 bg-accent-error/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🚫</span>
          </div>
        </div>
      </div>

      <div class="card">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Longest Streak</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">{stats.longestStreak}</p>
            <p class="text-sm text-text-muted mt-1">days</p>
          </div>
          <div class="w-12 h-12 bg-accent-warning/10 rounded-lg flex items-center justify-center">
            <span class="text-2xl">🔥</span>
          </div>
        </div>
      </div>
    </div>

    <!-- Your Actual Habits Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {processedHabits.length > 0 ? processedHabits.map((habit: Habit) => (
        <div key={habit.id} class="card hover:bg-surface-hover transition-colors">
          {/* Habit Header */}
          <div class="flex items-start justify-between mb-4">
            <div class="flex-1">
              <div class="flex items-center space-x-2 mb-2">
                <div 
                  class="w-3 h-3 rounded-full" 
                  style={`background-color: ${habit.color}`}
                ></div>
                <h3 class="font-semibold text-text-primary">{habit.name}</h3>
              </div>
              <p class="text-sm text-text-muted">{habit.category}</p>
              <p class="text-xs text-text-muted mt-1">{habit.description}</p>
            </div>
            <div class="flex flex-col items-end space-y-1">
              <span class={`px-2 py-1 text-xs rounded-full ${
                habit.type === 'build' 
                  ? 'bg-accent-success/20 text-accent-success' 
                  : 'bg-accent-error/20 text-accent-error'
              }`}>
                {habit.type}
              </span>
            </div>
          </div>

          {/* Streak Info */}
          <div class="flex items-center space-x-2 mb-4">
            <span class="text-2xl">🔥</span>
            <span class="text-lg font-semibold text-text-primary">{habit.streak_count || 0}</span>
            <span class="text-sm text-text-muted">day streak</span>
          </div>

          {/* Weekly Progress */}
          <div class="mb-4">
            <p class="text-xs text-text-muted mb-2">Last 7 days</p>
            <div class="flex space-x-1">
              {/* Astro/TypeScript quirk: 'key' on plain HTML elements in map might show TS error but works at runtime */}
              {habit.last7Days.map((day: DayProgress, index: number) => (
                <div
                  key={index}
                  class={`w-6 h-6 rounded-full flex items-center justify-center text-xs ${
                    day.completed
                      ? 'bg-accent-success text-white'
                      : 'bg-surface border border-border text-text-muted'
                  }`}
                  title={`${day.date}: ${day.completed ? '✓' : '✗'}`}
                >
                  {day.completed ? '✓' : '·'}
                </div>
              ))}
            </div>
          </div>

          {/* Action Button */}
          <button
            class={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${
              habit.completedToday
                ? 'bg-accent-success/20 text-accent-success border border-accent-success/30 cursor-default'
                : 'bg-accent-primary/20 text-accent-primary border border-accent-primary/30 hover:bg-accent-primary/30'
            }`}
            onclick={habit.completedToday ? undefined : `logHabit('${habit.id}', '${habit.name}')`}
            disabled={habit.completedToday}
          >
            {habit.completedToday ? (
              <>
                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                </svg>
                Completed Today ✅
              </>
            ) : (
              <>
                <svg class="w-4 h-4 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
                {habit.type === 'build' ? 'Mark Complete' : 'Mark Avoided'}
              </>
            )}
          </button>
        </div>
      )) : (
        <div class="col-span-full card text-center py-12">
          <div class="w-16 h-16 bg-accent-error/10 rounded-full flex items-center justify-center mx-auto mb-4">
            <span class="text-2xl">⚠️</span>
          </div>
          <h3 class="text-lg font-semibold text-text-primary mb-2">No habits found</h3>
          <p class="text-text-muted mb-4">
            Make sure you've run the SQL setup and replaced YOUR_USER_ID_HERE with your actual Supabase user ID
          </p>
          <div class="text-left bg-surface p-4 rounded-lg">
            <p class="text-xs text-text-muted mb-2">Debug info:</p>
            <p class="text-xs text-accent-error">User ID: {userId}</p>
            <p class="text-xs text-accent-error">Habits found: {habits?.length || 0}</p>
            <p class="text-xs text-accent-error">Error: {error?.message || 'None'}</p>
          </div>
        </div>
      )}
    </div>

    <!-- Debug Panel (remove after setup) -->
    <div class="card p-6 bg-accent-warning/5 border border-accent-warning/20">
      <h3 class="text-lg font-semibold text-accent-warning mb-4">🔧 Setup Status</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
        <div>
          <p class="font-medium text-text-primary">Database Connection</p>
          <p class="text-accent-success">✅ Connected</p>
        </div>
        <div>
          <p class="font-medium text-text-primary">User ID</p>
          <p class="text-accent-success">✅ Configured</p>
        </div>
        <div>
          <p class="font-medium text-text-primary">Habits Loaded</p>
          <p class={processedHabits.length > 0 ? 'text-accent-success' : 'text-accent-error'}>
            {processedHabits.length > 0 ? `✅ ${processedHabits.length} habits` : '❌ No habits'}
          </p>
        </div>
      </div>
    </div>
  </div>
</DashboardLayout>

<script>
  document.getElementById('add-habit-btn')?.addEventListener('click', () => {
    alert('✨ Habit creation feature coming in the next phase! For now, you can add sample data directly to your Supabase database.');
  });

  document.getElementById('create-first-habit')?.addEventListener('click', () => {
    alert('✨ Habit creation feature coming in the next phase! For now, you can add sample data directly to your Supabase database.');
  });
</script>

</final_file_content>

IMPORTANT: For any future changes to this file, use the final_file_content shown above as your reference. This content reflects the current state of the file, including any auto-formatting (e.g., if you used single quotes but the formatter converted them to double quotes). Always base your SEARCH/REPLACE operations on this final version to ensure accuracy.



New problems detected after saving the file:
src/pages/index.astro
- [ts Error] Line 180: Type '{ children: any[]; key: number; class: string; }' is not assignable to type 'HTMLAttributes'.
  Property 'key' does not exist on type 'HTMLAttributes'.
- [ts Error] Line 30: Argument of type 'any[] | undefined' is not assignable to parameter of type 'any[]'.
  Type 'undefined' is not assignable to type 'any[]'.
- [ts Error] Line 29: Argument of type 'any[] | undefined' is not assignable to parameter of type 'any[]'.
  Type 'undefined' is not assignable to type 'any[]'.
- [ts Error] Line 28: Argument of type 'any[] | undefined' is not assignable to parameter of type 'any[]'.
  Type 'undefined' is not assignable to type 'any[]'.
- [ts Error] Line 341: 'content' is possibly 'null'.
- [ts Error] Line 339: 'content' is possibly 'null'.<environment_details>
# VSCode Visible Files
src/pages/habits.astro

# VSCode Open Tabs
package.json
src/styles/global.css
src/types/supabase.ts
src/pages/api/habits/index.ts
.vscode/settings.json
src/lib/supabase/server.ts
src/lib/data/dashboard.ts
src/lib/supabase/client.ts
src/pages/tasks.astro
src/pages/health.astro
src/pages/finance.astro
src/pages/content.astro
src/pages/login.astro
theplan.txt
src/pages/api/habits/[id]/log.ts
src/pages/api/import/loop-habits.ts
src/components/import/LoopHabitsImport.tsx
src/pages/index.astro
src/pages/import.astro
src/pages/habits.astro
src/lib/import/loopHabits.ts
tailwind.config.mjs
src/layouts/DashboardLayout.astro
src/layouts/Layout.astro
astro.config.mjs
src/lib/utils/index.ts
tsconfig.json
.env
src/scripts/auth.ts
src/env.d.ts

# Current Time
6/6/2025, 8:08:40 AM (Asia/Calcutta, UTC+5.5:00)

# Context Window Usage
452,254 / 1,048.576K tokens used (43%)

# Current Mode
ACT MODE
</environment_details>
