---
// src/pages/index.astro
import DashboardLayout from '../layouts/DashboardLayout.astro';
import { createServerClient } from '../lib/supabase/server';

const supabase = createServerClient(Astro.cookies);

// Get user session (handle null case for dev mode)
const { data: { user } } = await supabase.auth.getUser();

// For dev mode when user is null, use a valid UUID format
const userId = user?.id || '00000000-0000-0000-0000-000000000000';

// Fetch user's habits for today's stats (with error handling)
let habits = null;
let recentEntries = null;

try {
  const { data: habitsData, error: habitsError } = await supabase
    .from('habits')
    .select(`
      *,
      habit_entries!inner(logged_at)
    `)
    .eq('user_id', userId)
    .eq('is_active', true);
  
  if (!habitsError) {
    habits = habitsData;
  } else {
    console.log('Habits table not found or error:', habitsError.message);
  }
} catch (error) {
  console.log('Database error (habits):', error);
}

try {
  const { data: entriesData, error: entriesError } = await supabase
    .from('habit_entries')
    .select(`
      *,
      habits(name, type)
    `)
    .eq('habits.user_id', userId)
    .order('logged_at', { ascending: false })
    .limit(5);
  
  if (!entriesError) {
    recentEntries = entriesData;
  } else {
    console.log('Habit entries table not found or error:', entriesError.message);
  }
} catch (error) {
  console.log('Database error (entries):', error);
}

// Calculate today's completion
const today = new Date().toDateString();
const habitsWithToday = habits?.map((habit: any) => {
  const todayEntry = habit.habit_entries?.some((entry: any) => 
    new Date(entry.logged_at).toDateString() === today
  );
  return { ...habit, completedToday: todayEntry };
}) || [];

const totalHabits = habitsWithToday.length;
const completedToday = habitsWithToday.filter(h => h.completedToday).length;

const userName = user?.user_metadata?.full_name?.split(' ')[0] || 
                 user?.user_metadata?.name?.split(' ')[0] || 
                 user?.email?.split('@')[0] || 
                 'Friend';
---

<DashboardLayout title="MeshOS - Dashboard">
  <div class="space-y-8">
    <!-- Welcome Section -->
    <div>
      <h1 class="text-3xl font-semibold text-text-primary mb-2">
        Good morning, {userName}
      </h1>
      <p class="text-text-secondary">
        Here's what's happening with your life today
      </p>
    </div>

    <!-- Stats Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      <!-- Habits Today -->
      <div class="card-hover">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Habits Today</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">{completedToday}/{totalHabits}</p>
            <p class="text-sm text-accent-success mt-1">
              {totalHabits === 0 ? 'Ready to start!' : `${Math.round((completedToday / totalHabits) * 100)}% complete`}
            </p>
          </div>
          <div class="w-12 h-12 bg-accent-success/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-success" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Tasks -->
      <div class="card-hover">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Tasks</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">0</p>
            <p class="text-sm text-text-muted mt-1">Coming soon</p>
          </div>
          <div class="w-12 h-12 bg-accent-primary/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Health Score -->
      <div class="card-hover">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Health Score</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">--</p>
            <p class="text-sm text-accent-success mt-1">Coming soon</p>
          </div>
          <div class="w-12 h-12 bg-accent-error/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-error" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
            </svg>
          </div>
        </div>
      </div>

      <!-- Finance -->
      <div class="card-hover">
        <div class="flex items-center justify-between">
          <div>
            <p class="text-sm font-medium text-text-muted">Net Worth</p>
            <p class="text-2xl font-semibold text-text-primary mt-1">--</p>
            <p class="text-sm text-text-muted mt-1">Coming soon</p>
          </div>
          <div class="w-12 h-12 bg-accent-warning/10 rounded-lg flex items-center justify-center">
            <svg class="w-6 h-6 text-accent-warning" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content Grid -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
      <!-- Recent Activity -->
      <div class="lg:col-span-2">
        <div class="card">
          <h2 class="text-xl font-semibold text-text-primary mb-6">Recent Activity</h2>
          
          {recentEntries && recentEntries.length > 0 ? (
            <div class="space-y-4">
              {recentEntries.map((entry: any) => (
                <div class="flex items-center space-x-3 p-3 bg-surface-hover rounded-lg">
                  <div class={`w-3 h-3 rounded-full ${
                    entry.habits.type === 'build' ? 'bg-accent-success' : 'bg-accent-error'
                  }`}></div>
                  <div class="flex-1">
                    <p class="text-sm font-medium text-text-primary">
                      {entry.habits.type === 'build' ? 'Completed' : 'Avoided'}: {entry.habits.name}
                    </p>
                    <p class="text-xs text-text-muted">
                      {new Date(entry.logged_at).toLocaleDateString()} at {new Date(entry.logged_at).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}
                    </p>
                  </div>
                  <div class="text-2xl">
                    {entry.habits.type === 'build' ? 'âœ…' : 'ðŸš«'}
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div class="text-center py-8">
              <p class="text-text-muted">No recent activity yet. Start logging some habits!</p>
            </div>
          )}
        </div>
      </div>

      <!-- Quick Actions -->
      <div class="space-y-6">
        <div class="card">
          <h2 class="text-xl font-semibold text-text-primary mb-6">Quick Actions</h2>
          
          <div class="space-y-3">
            <a href="/habits" class="w-full flex items-center justify-start px-4 py-3 bg-accent-success/10 hover:bg-accent-success/20 border border-accent-success/20 text-accent-success rounded-lg transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              Log Habit
            </a>

            <a href="/tasks" class="w-full flex items-center justify-start px-4 py-3 bg-accent-primary/10 hover:bg-accent-primary/20 border border-accent-primary/20 text-accent-primary rounded-lg transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v10a2 2 0 002 2h8a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path>
              </svg>
              Add Task
            </a>

            <a href="/health" class="w-full flex items-center justify-start px-4 py-3 bg-accent-error/10 hover:bg-accent-error/20 border border-accent-error/20 text-accent-error rounded-lg transition-colors">
              <svg class="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
              </svg>
              Health Metrics
            </a>
          </div>
        </div>

        <!-- System Status -->
        <div class="card">
          <h3 class="text-lg font-medium text-text-primary mb-4">System Status</h3>
          
          <div class="space-y-3">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-accent-success rounded-full"></div>
                <span class="text-sm text-text-secondary">Database</span>
              </div>
              <span class="text-sm text-accent-success">Connected</span>
            </div>

            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-accent-success rounded-full"></div>
                <span class="text-sm text-text-secondary">Authentication</span>
              </div>
              <span class="text-sm text-accent-success">Active</span>
            </div>

            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-2">
                <div class="w-2 h-2 bg-accent-primary rounded-full"></div>
                <span class="text-sm text-text-secondary">Data Sync</span>
              </div>
              <span class="text-sm text-accent-primary">Ready</span>
            </div>
          </div>
        </div>

        <!-- User Info -->
        <div class="card">
          <h3 class="text-lg font-medium text-text-primary mb-4">Profile</h3>
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-gradient-to-r from-accent-primary to-accent-purple rounded-full flex items-center justify-center">
              <span class="text-sm font-medium text-white">{userName.charAt(0).toUpperCase()}</span>
            </div>
            <div>
              <p class="text-sm font-medium text-text-primary">{userName}</p>
              <p class="text-xs text-text-muted">{user?.email}</p>
            </div>
          </div>
          
          <button 
            id="logout-btn"
            class="w-full mt-4 px-3 py-2 text-xs bg-surface-hover hover:bg-border text-text-secondary hover:text-text-primary rounded-lg transition-colors"
          >
            Sign Out
          </button>
        </div>
      </div>
    </div>
  </div>
</DashboardLayout>

<script>
  import { supabase } from '../lib/supabase/client.ts';

  document.getElementById('logout-btn')?.addEventListener('click', async () => {
    const { error } = await supabase.auth.signOut();
    if (!error) {
      window.location.href = '/login';
    }
  });
</script>
