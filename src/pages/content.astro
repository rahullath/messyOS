---
// src/pages/content.astro
import DashboardLayout from '../layouts/DashboardLayout.astro';
---

<DashboardLayout title="Content - MeshOS">
  <div class="space-y-8">
    <!-- Header -->
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-semibold text-text-primary mb-2">Content Tracking</h1>
        <p class="text-text-secondary">
          Track movies, shows, books, and get personalized recommendations
        </p>
      </div>
      <div class="flex gap-3">
        <button 
          id="import-enriched-btn"
          class="flex items-center px-4 py-2 bg-accent-purple text-white rounded-lg hover:bg-accent-purple/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
          </svg>
          Import Enriched Data
        </button>
        
        <button 
          id="refresh-content-btn"
          class="flex items-center px-4 py-2 bg-accent-primary text-white rounded-lg hover:bg-accent-primary/90 transition-colors"
        >
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
          </svg>
          Refresh
        </button>
      </div>
    </div>

    <!-- Enhanced Content Dashboard Component -->
    <div id="content-dashboard-container" class="min-h-[400px]">
      <!-- Loading state -->
      <div class="flex items-center justify-center h-64">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-500"></div>
        <span class="ml-3 text-text-secondary">Loading content dashboard...</span>
      </div>
    </div>

    <!-- Quick Import Section -->
    <div class="bg-surface border border-border rounded-lg p-6">
      <h2 class="text-xl font-semibold text-text-primary mb-4">Serializd Enhanced Import</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <h3 class="font-medium text-text-primary mb-2">üìä Enriched Reviews</h3>
          <p class="text-text-muted text-sm mb-3">
            Import your enriched_Reviews.json with TMDB data, ratings, and detailed metadata
          </p>
          <input 
            type="file" 
            id="enriched-reviews-input" 
            accept=".json,.csv" 
            class="hidden"
          >
          <button 
            onclick="document.getElementById('enriched-reviews-input').click()"
            class="w-full px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            Select enriched_Reviews.json
          </button>
        </div>
        
        <div>
          <h3 class="font-medium text-text-primary mb-2">üì∫ Enriched Watched Shows</h3>
          <p class="text-text-muted text-sm mb-3">
            Import your enriched_Watched_shows.json with comprehensive TV show metadata
          </p>
          <input 
            type="file" 
            id="enriched-shows-input" 
            accept=".json,.csv" 
            class="hidden"
          >
          <button 
            onclick="document.getElementById('enriched-shows-input').click()"
            class="w-full px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors"
          >
            Select enriched_Watched_shows.json
          </button>
        </div>
      </div>
      
      <!-- Expected Format Info -->
      <div class="mt-6 p-4 bg-surface-hover rounded-lg border border-border">
        <h4 class="font-medium text-text-primary mb-2">‚ú® Enhanced Serializd Format Expected:</h4>
        <div class="text-sm text-text-muted space-y-1">
          <p><strong>Required fields:</strong> Title, Rating, Watch_Date, TMDB_ID</p>
          <p><strong>Enhanced fields:</strong> Genres, Cast, Overview, Season_Episode, Review_Text</p>
        </div>
        
        <div class="mt-3 text-sm text-text-muted">
          <p><strong>‚ú® This importer handles:</strong></p>
          <ul class="list-disc list-inside ml-4 space-y-1 mt-2">
            <li>Rich TMDB metadata (cast, genres, ratings)</li>
            <li>TV shows with season/episode tracking</li>
            <li>Personal reviews and ratings</li>
            <li>Duplicate detection and prevention</li>
            <li>Batch processing for large imports</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</DashboardLayout>

<script>
  // Function to load the React component
  async function loadContentDashboard() {
    try {
      // Dynamically import React and the component
      const [React, ReactDOM, { default: ContentDashboardComponent }] = await Promise.all([
        import('react'),
        import('react-dom/client'),
        import('../components/dashboard/ContentDashboardComponent.tsx')
      ]);

      const container = document.getElementById('content-dashboard-container');
      if (container) {
        const root = ReactDOM.createRoot(container);
        root.render(React.createElement(ContentDashboardComponent));
      }
    } catch (error) {
      console.error('Failed to load content dashboard:', error);
      
      // Show error state
      const container = document.getElementById('content-dashboard-container');
      if (container) {
        container.innerHTML = `
          <div class="text-center py-12">
            <div class="text-red-400 mb-4">‚ö†Ô∏è Failed to load dashboard</div>
            <p class="text-text-muted">Please refresh the page</p>
          </div>
        `;
      }
    }
  }

  // Handle file imports
  async function handleFileImport(file, endpoint) {
    if (!file) return;

    const formData = new FormData();
    formData.append('serializd_data', file);

    try {
      // Show loading toast
      showToast('üìä Importing data...', 'info');

      const response = await fetch(endpoint, {
        method: 'POST',
        body: formData
      });

      const result = await response.json();
      
      if (result.success) {
        showToast(`‚úÖ Successfully imported ${result.stats?.imported || 0} items!`, 'success');
        
        // Refresh the dashboard
        setTimeout(() => {
          loadContentDashboard();
        }, 1000);
      } else {
        showToast(`‚ùå Import failed: ${result.error}`, 'error');
      }
    } catch (error) {
      console.error('Import error:', error);
      showToast('‚ùå Import failed. Please try again.', 'error');
    }
  }

  // Toast notification function
  function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `fixed top-4 right-4 px-6 py-3 rounded-lg shadow-lg z-50 text-white max-w-md ${
      type === 'success' ? 'bg-green-600' : 
      type === 'error' ? 'bg-red-600' : 
      'bg-blue-600'
    }`;
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.remove();
    }, 5000);
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', () => {
    // Load the dashboard
    loadContentDashboard();

    // Handle enriched reviews import
    document.getElementById('enriched-reviews-input')?.addEventListener('change', (e) => {
      const file = (e.target as HTMLInputElement).files?.[0];
      if (file) {
        handleFileImport(file, '/api/content/import/serializd');
      }
    });

    // Handle enriched shows import  
    document.getElementById('enriched-shows-input')?.addEventListener('change', (e) => {
      const file = (e.target as HTMLInputElement).files?.[0];
      if (file) {
        handleFileImport(file, '/api/content/import/serializd');
      }
    });

    // Handle refresh button
    document.getElementById('refresh-content-btn')?.addEventListener('click', () => {
      loadContentDashboard();
    });

    // Handle import button (redirect to dedicated import page)
    document.getElementById('import-enriched-btn')?.addEventListener('click', () => {
      window.location.href = '/import';
    });
  });
</script>

<style>
  /* Custom styles for content page */
  .card {
    @apply bg-surface border border-border rounded-lg;
  }
  
  /* Loading animation */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }
  
  .animate-spin {
    animation: spin 1s linear infinite;
  }
</style>