// ==================================================
// 1. Fix Google Auth Callback - Replace auth/exchange.astro
// ==================================================

// src/pages/auth/exchange.astro
---
// This page handles the PKCE exchange on the client side
---

---
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
---

<!DOCTYPE html>
<html>
<head>
  <title>Completing Login...</title>
  <meta name="supabase-url" content={supabaseUrl} />
  <meta name="supabase-key" content={supabaseKey} />
  <style>
    body { 
      font-family: system-ui; 
      display: flex; 
      align-items: center; 
      justify-content: center; 
      height: 100vh; 
      margin: 0; 
      background: linear-gradient(135deg, #1e293b, #334155);
      color: white;
    }
    .spinner { 
      width: 40px; 
      height: 40px; 
      border: 4px solid #64748b; 
      border-top: 4px solid #06b6d4; 
      border-radius: 50%; 
      animation: spin 1s linear infinite; 
      margin-bottom: 20px;
    }
    @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(360deg); } }
  </style>
</head>
<body>
  <div style="text-align: center;">
    <div class="spinner"></div>
    <p>Completing your login...</p>
    <p id="status" style="color: #64748b; font-size: 14px;">Initializing...</p>
  </div>

  <script type="module">
    import { createClient } from 'https://esm.sh/@supabase/supabase-js@2';
    
    async function handleAuthExchange() {
      const status = document.getElementById('status');
      
      try {
        status.textContent = 'Setting up authentication...';
        
        // Get environment variables from meta tags
        const supabaseUrl = document.querySelector('meta[name="supabase-url"]')?.getAttribute('content');
        const supabaseKey = document.querySelector('meta[name="supabase-key"]')?.getAttribute('content');
        
        if (!supabaseUrl || !supabaseKey) {
          throw new Error('Missing Supabase configuration');
        }
        
        // Initialize Supabase client
        const supabase = createClient(supabaseUrl, supabaseKey, {
          auth: {
            flowType: 'pkce',
            autoRefreshToken: true,
            detectSessionInUrl: true,
            persistSession: true
          }
        });
        
        const urlParams = new URLSearchParams(window.location.search);
        const code = urlParams.get('code');
        
        if (!code) {
          throw new Error('No auth code received');
        }
        
        status.textContent = 'Exchanging authentication code...';
        
        // This will use the code verifier from localStorage
        const { data, error } = await supabase.auth.exchangeCodeForSession(code);
        
        if (error) {
          console.error('Exchange error:', error);
          status.textContent = 'Authentication failed. Redirecting...';
          setTimeout(() => {
            window.location.href = '/login?error=exchange_failed';
          }, 2000);
          return;
        }
        
        status.textContent = 'Authentication successful! Redirecting...';
        console.log('✅ Successfully exchanged code for session:', data.user?.email);
        console.log('🍪 Cookies should be automatically set by Supabase client');
        
        // Clear the URL and redirect
        setTimeout(() => {
          window.location.href = '/';
        }, 1000);
        
      } catch (error) {
        console.error('Auth exchange error:', error);
        status.textContent = 'Something went wrong. Redirecting...';
        setTimeout(() => {
          window.location.href = '/login?error=unexpected';
        }, 2000);
      }
    }
    
    // Start the exchange process
    handleAuthExchange();
  </script>
</body>
</html>


